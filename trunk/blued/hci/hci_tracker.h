#ifndef __BTOOL_HCI_TRACKER_H
#define __BTOOL_HCI_TRACKER_H

#include <map>

#include "../../cbus/cbus.h"

#include "../../hal/halmanager.h"
#include "../../hal/haldevice.h"

#include "../../libbluetool/hcidevice.h"

class HciListener;

#include "hci_device.h"

class HciTracker : public HalManager
{
public:
	HciTracker( /*HciDevicePTable&*/ );

	
	~HciTracker();

private:
	/*	signals generated by the HalManager
	*/
	void DeviceAdded( const DBus::SignalMessage& );
	void DeviceRemoved( const DBus::SignalMessage& );

private:

//	void update_table();
private:

	HciDevicePTable	_devices;
};

#endif//__BTOOL_HCI_TRACKER_H
